import datetime
from pprint import pprint

import requests
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text

from keyboards.default import kb_weather, kb_stop_fsm_weather
from loader import bot, types, dp
from utils.db_api.commands_all import UserCommand
from utils.db_api.data_base import get_async_session
from states import WeatherStateOneday, WeatherStatWeek
from data.config import APIWEATHER


@dp.message_handler(Text(equals='–ü–æ–≥–æ–¥–∞‚õÖÔ∏è'))
async def weather_button(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –ø–æ–≥–æ–¥—ã"""
    try:
        async with get_async_session() as session:
            user_cmd = UserCommand(session)
            user = await user_cmd.get_user(message.from_user.id)
            if user:
                await bot.send_photo(chat_id=message.from_user.id,
                                     photo='https://www.google.com/imgres?imgurl=https%3A%2F%2Fimage.winudf.com%2'
                                           'Fv2%2Fimage1%2FY29tLmluaXR5Lmdvb2R3ZWF0aGVyX3NjcmVlbl9ydS1SVV82XzE1NTgwNjM2NDNfMDIz%2Fscreen-6.jpg%3Ffakeurl%3D1%26type%3D.jpg&'
                                           'tbnid=eEFP2fLvnUJZNM&vet=10CDoQMyiBAWoXChMIqI_mm-uh_wIVAAAAAB0AAAAAEAI..i&imgrefurl=https%3A%2F%2Fapkpure.com%2Fru%2'
                                           'Fgood-morning-weather-free-world-weather-forecast%'
                                           '2Fcom.inity.goodweather&docid=dfqFRTWOgb5FjM&w=1100&h=814&'
                                           'itg=1&q=%D0%B1%D0%B5%D1%81%D0%BF%D0%BB%D0%B0%D1%82%D0%BD%D0%BE%D0%B5%20%D1%84%D0%BE%D1%82%D0%BE%20%D0%BF%D0%BE%D0%B3%D0%BE%D0%B4%D1%8B&'
                                           'ved=0CDoQMyiBAWoXChMIqI_mm-uh_wIVAAAAAB0AAAAAEAI',
                                     caption='–°–º–æ—Ç—Ä–∏ –ø–æ–≥–æ–¥—É –Ω–∞ —Å–µ–≥–æ–¥–Ω—è!‚úÖ  –ò–ª–∏ –Ω–∞ 5 –¥–Ω–µ–π üëÅ',
                                     reply_markup=kb_weather()
                                     )
            else:
                await bot.send_message(chat_id=message.from_user.id, text="–ü—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é .")

    except Exception as e:
        print(F'–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {e}')


@dp.message_handler(Text(equals='–ù–∞ —Å–µ–≥–æ–¥–Ω—è ‚õÖÔ∏è'), state=None)
async def weather_now(message: types.Message):
    """–ü—Ä–æ–≥–Ω–æ—Å –ø–æ–≥–æ–¥—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è"""
    try:
        async with get_async_session() as session:
            user_cmd = UserCommand(session)
            user = user_cmd.get_user(message.from_user.id)
            if user:
                await bot.send_message(chat_id=message.from_user.id,
                                       text='–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥  –∏–ª–∏ —Å—Ç—Ä–∞–Ω—É üåç',
                                       reply_markup=kb_stop_fsm_weather())
                await WeatherStateOneday.city.set()

            else:
                await bot.send_message(chat_id=message.from_user.id, text=F"–ü—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–µ—Å—Ç—Ä–∞—Ü–∏—é")
    except Exception as e:
        print(F"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")


@dp.message_handler(state=WeatherStateOneday.city)
async def check_correct_data_city(message: types.Message, state: FSMContext):
    city = message.text
    try:

        code_to_smile = {
            "Clear": "–Ø—Å–Ω–æ \U00002600",
            "Clouds": "–û–±–ª–∞—á–Ω–æ \U00002601",
            "Rain": "–î–æ–∂–¥—å \U00002614",
            "Drizzle": "–î–æ–∂–¥—å \U00002614",
            "Thunderstorm": "–ì—Ä–æ–∑–∞ \U000026A1",
            "Snow": "–°–Ω–µ–≥ \U0001F328",
            "Mist": "–¢—É–º–∞–Ω \U0001F32B"
        }

        r = requests.get(
            F"https://api.openweathermap.org/data/2.5/weather?q={city}&appid={APIWEATHER}&units=metric&lang=ua,uk"
        )

        data = r.json()

        city_name = data['name']
        weather_description = data["weather"][0]["main"]
        if weather_description in code_to_smile:
            wd = code_to_smile[weather_description]
        else:
            wd = "–ü–æ—Å–º–æ—Ç—Ä–∏ –≤ –æ–∫–Ω–æ, –Ω–µ –ø–æ–π–º—É —á—Ç–æ —Ç–∞–º –∑–∞ –ø–æ–≥–æ–¥–∞!"
        temp = data['main']['temp']
        country = data['sys']['country']
        humidity = data['main']['humidity']
        pressure = data['main']['pressure']
        speed_wind = data['wind']['speed']
        sunrise = datetime.datetime.fromtimestamp(data['sys']['sunrise'])
        sunset = datetime.datetime.fromtimestamp(data['sys']['sunset'])
        length_of_the_day = sunset - sunrise

        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ø–æ–≥–æ–¥—ã
        weather_message = (
            F'<em>–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ: {city_name}</em>\n'
            F'<b>–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å–µ–π—á–∞—Å: {temp}¬∞C {wd} </b>\n'
            F'<em>***–¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞: {datetime.datetime.now().date()}***</em>\n'
            F'<em>–°—Ç—Ä–∞–Ω–∞: {country}\n</em>'
            F'<em>–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n</em>'
            F'<em>–î–∞–≤–ª–µ–Ω–∏–µ: {pressure} –º–º.—Ä—Ç.—Å—Ç.\n</em>'
            F'<em>–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {speed_wind} –º/—Å\n</em>'
            F'<em>–†–∞—Å—Å–≤–µ—Ç: {sunrise}\n</em>'
            F'<em>–ó–∞–∫–∞—Ç: {sunset}</em> \n'
            F'<em>–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–Ω—è: {length_of_the_day}</em>'
        )

        await bot.send_photo(chat_id=message.from_user.id,
                             caption=weather_message,
                             photo='https://www.google.com/imgres?imgurl=https%3A%2F%2Fotkrytkivsem.ru%2Fwp-content%2Fup'
                                   'loads%2F2021%2F03%2Fkartinka-dobrogo-dnya-i-horoshey-pogody.jpg&tbnid=fjxjmEGe36aCnM'
                                   '&vet=12ahUKEwiAw9G0-qH_AhUGpIsKHSniBLsQMyhFegQIARBt..i&imgrefurl=https%3A%2F%2Fotkryt'
                                   'kivsem.ru%2Fdlya-horoshego-nastroeniya%2Fdnevnye%2Fkartinka-dobrogo-dnya-i-horoshey-'
                                   'pogody%2F&docid=IWF1MG3_hiK-jM&w=600&h=600&q=%D0%BA%D0%B0%D1%80%D1%82%D0%B8%D0%BD%D0'
                                   '%BA%D0%B0%20%D0%BF%D0%BE%D0%B3%D0%BE%D0%B4%D1%8B%20%D0%B1%D0%B5%D1%81%D0%BF%D0%BB%D0'
                                   '%B0%D1%82%D0%BD%D0%BE&ved=2ahUKEwiAw9G0-qH_AhUGpIsKHSniBLsQMyhFegQIARBt',
                             reply_markup=kb_weather())
        await state.finish()

    except Exception as e:
        print(F"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–≥–æ–¥—ã: {e}")
        await message.answer(text=F"–¢–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –∏–ª–∏ —Å—Ç—Ä–∞–Ω—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ‚òùÔ∏è"
                                  F"–ü—Ä–æ–≤–µ—Ä—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω—ã—Ö –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞üôÑ",
                             reply_markup=kb_stop_fsm_weather())


# –ù–∞ –Ω–µ–¥–µ–ª—é ‚õÖÔ∏è
@dp.message_handler(Text(equals='–ù–∞ 5 –¥–Ω–µ–π ‚õÖÔ∏è'),state=None)
async def show_weather_week(message: types.Message):
    """–ü—Ä–æ–≥–Ω–æ—Å –ø–æ–≥–æ–¥—ã –Ω–∞ –Ω–µ–¥–µ–ª—é"""
    try:
        async with get_async_session() as session:
            user_cmd = UserCommand(session)
            user = user_cmd.get_user(message.from_user.id)
            if user:
                await bot.send_message(chat_id=message.from_user.id,
                                       text='–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥  –∏–ª–∏ —Å—Ç—Ä–∞–Ω—É üåç',
                                       reply_markup=kb_stop_fsm_weather())
                await WeatherStatWeek.city.set()

            else:
                await bot.send_message(chat_id=message.from_user.id, text=F"–ü—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–µ—Å—Ç—Ä–∞—Ü–∏—é")
    except Exception as e:
        print(F"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")



@dp.message_handler(state=WeatherStatWeek.city)
async def get_weather_info(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏ –≤—ã–≤–æ–≤ –ø–æ–≥–æ–¥—ã –Ω–∞ –Ω–µ–¥–µ–ª—é"""
    city = message.text
    try:
        response = requests.get(
            url=f"https://api.openweathermap.org/data/2.5/forecast?q={city}&appid={APIWEATHER}&units=metric&lang=ru")
        data = response.json()

        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã
        current_date = datetime.datetime.now().date()

        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã
        current_date = datetime.datetime.now().date()

        # –°–ª–æ–≤–∞—Ä—å —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è–º–∏ –º–µ–∂–¥—É –Ω–æ–º–µ—Ä–∞–º–∏ –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏ –∏ –∏—Ö –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
        days_of_week = {
            0: '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫',
            1: '–í—Ç–æ—Ä–Ω–∏–∫',
            2: '–°—Ä–µ–¥–∞',
            3: '–ß–µ—Ç–≤–µ—Ä–≥',
            4: '–ü—è—Ç–Ω–∏—Ü–∞',
            5: '–°—É–±–±–æ—Ç–∞',
            6: '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ'
        }

        # –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–≥–æ–¥–µ
        weather_data = []

        # –ò—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –∫–∞–∂–¥–æ–º—É –ø—Ä–æ–≥–Ω–æ–∑—É –ø–æ–≥–æ–¥—ã
        for forecast in data['list']:
            # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–æ–≥–Ω–æ–∑–∞
            forecast_date_time = datetime.datetime.fromtimestamp(forecast['dt'])
            forecast_date = forecast_date_time.date()
            forecast_time = forecast_date_time.time()

            # –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø—Ä–æ–≥–Ω–æ–∑–æ–º –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å –∏ –ø–æ–ª—É–¥–µ–Ω–Ω—ã–º
            if forecast_date > current_date and forecast_time.hour == 12:
                # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –ø–æ–ª—É–¥–Ω—è
                temperature = forecast['main']['temp']

                # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–Ω—è –Ω–µ–¥–µ–ª–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
                day_of_week = days_of_week[forecast_date.weekday()]

                # –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π
                weather_description = forecast['weather'][0]['description']


                # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–≥–æ–¥–µ
                weather_info = f"<em>{day_of_week}</em>: <b>{temperature}¬∞C </b><em>{weather_description}</em>"
                # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —Å–ø–∏—Å–æ–∫
                weather_data.append(weather_info)
        weather_message = "\n".join(weather_data)
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–≥–æ–¥–µ
        await bot.send_photo(chat_id=message.from_user.id,
                             caption=weather_message,
                             photo='https://www.google.com/imgres?imgurl=https%3A%2F%2Fotkrytkivsem.ru%2Fwp-content%2Fup'
                                   'loads%2F2021%2F03%2Fkartinka-dobrogo-dnya-i-horoshey-pogody.jpg&tbnid=fjxjmEGe36aCnM'
                                   '&vet=12ahUKEwiAw9G0-qH_AhUGpIsKHSniBLsQMyhFegQIARBt..i&imgrefurl=https%3A%2F%2Fotkryt'
                                   'kivsem.ru%2Fdlya-horoshego-nastroeniya%2Fdnevnye%2Fkartinka-dobrogo-dnya-i-horoshey-'
                                   'pogody%2F&docid=IWF1MG3_hiK-jM&w=600&h=600&q=%D0%BA%D0%B0%D1%80%D1%82%D0%B8%D0%BD%D0'
                                   '%BA%D0%B0%20%D0%BF%D0%BE%D0%B3%D0%BE%D0%B4%D1%8B%20%D0%B1%D0%B5%D1%81%D0%BF%D0%BB%D0'
                                   '%B0%D1%82%D0%BD%D0%BE&ved=2ahUKEwiAw9G0-qH_AhUGpIsKHSniBLsQMyhFegQIARBt',
                             reply_markup=kb_weather())

        # –û–±–Ω—É–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –ø–æ–≥–æ–¥–µ
        weather_data.clear()
        await state.finish()
    except Exception as e:
        print(F"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–≥–æ–¥—ã: {e}")
        await message.answer(text=F"–¢–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –∏–ª–∏ —Å—Ç—Ä–∞–Ω—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ‚òùÔ∏è"
                                  F"–ü—Ä–æ–≤–µ—Ä—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω—ã—Ö –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞üôÑ",
                             reply_markup=kb_stop_fsm_weather())
